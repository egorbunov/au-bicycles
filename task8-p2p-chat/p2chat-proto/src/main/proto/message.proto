syntax = "proto3";

option java_package = "ru.spbau.mit.sd.commons.proto";
option java_outer_classname = "Protos";
option java_multiple_files = true;

message ChatUserIpAddr {
    string ip = 1;
    int32 port = 2;
}

message ChatUserInfo {
    string name = 1;
}

message User {
    ChatUserIpAddr id = 1; // that is ip address, which shoul be used to connect to that user
                           // by other peers
    ChatUserInfo info = 2;
}

message UsersList {
    repeated User users = 1;
}

message ChatMessage {
    int64 timestamp = 1;
    string text = 2;
}

message PeerToServerMsg {
    enum Type {
        PEER_ONLINE = 0;
        PEER_GONE_OFFLINE = 1;
        GET_AVAILABLE_USERS = 2;
        MY_INFO_CHANGED = 3;
        DISCONNECT = 4; // message designating end of server-peer session, that does not mean,
                        // that peer gone offline, but it just don't want to hold server connection
    }

    Type msgType = 1;
    ChatUserIpAddr userId = 2;
    ChatUserInfo userInfo = 3;
}

message ServerToPeerMsg {
    enum Type {
        AVAILABLE_USERS = 0;   // answer to GET_USERS request from peer
    }

    Type msgType = 1;

    // this field is filled only in case of USERS_INFO_DATA msg type
    UsersList users = 4;
}

message PeerToPeerMsg {
    enum Type {
        TEXT_MESSAGE = 0;
        MY_INFO_CHANGED = 1;
        I_AM_ONLINE = 2;
        I_AM_GONE_OFFLINE = 3;
        DISCONNECT = 4;
    }
    ChatMessage message = 1;
    ChatUserIpAddr userFromId = 2;
    ChatUserInfo userInfo = 3;
}